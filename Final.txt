Manipulate[
 Module[{x, y, soln, eqns, t, xmax, ymax},
  eqns = {x''[t] == -(\[Kappa]/(2 m)) bs^2 (x'[t])^2, 
    x'[0] == v*Cos[\[Theta] Degree], x[0] == 0, 
    y''[t] == -g - \[Kappa]/(2 m) bs^2 (y'[t])^2, 
    y'[0] == v*Sin[\[Theta] Degree], y[0] == h};
  soln = Flatten[
    Quiet@NDSolve[eqns, {x, y}, {t, 0, Infinity}, 
      Method -> {"EventLocator", "Event" -> y[t], 
        "EventAction" :> Throw[tf = t, "StopIntegration"], 
        "Direction" -> -1}, MaxSteps -> Infinity]];
  s = Evaluate[{x[end], y[end]} /. soln];
  ymax = First@
    Quiet@FindMaximum[{y[t] /. soln, 0 <= t <= tf}, {t, tf/2}];
  xmax = x[tf] /. soln;
  Labeled[
   Show[{ParametricPlot[{x[t], y[t]} /. soln, {t, 0, Min[tf, end]}, 
      AxesOrigin -> {0, 0}, ImageSize -> {700, 500}, 
      PlotRange -> {{-3 Max[.007*xmax*bs*1.5, .01*ymax*bs*1.5], 
         Max[.007*xmax*bs*4, .01*ymax*bs*4, 
          1.1 xmax]}, {-2 Max[.007*xmax*bs*1.5, .01*ymax*bs*1.5], 
         1.5 ymax}}, 
      AxesLabel -> {Style["x(t)", Italic, Bold, "Label"], 
        Style["y(t)", Italic, Bold, "Label"]}, ImagePadding -> 30], 
     Graphics[{Darker[Green, 0], 
       Rectangle[{-xmax, 0}, 2 {xmax, -ymax}]}], 
     Graphics[{Lighter[Blue, .9], 
       Rectangle[{-xmax, 0}, 2 {xmax, ymax}]}], 
     ParametricPlot[{x[t], y[t]} /. soln, {t, 0, Min[tf, end]}, 
      AxesOrigin -> {0, 0}, ImageSize -> {650, 500}, 
      PlotRange -> {{-3 Max[.007*xmax*bs*1.5, .01*ymax*bs*1.5], 
         Max[.007*xmax*bs*4, .01*ymax*bs*4, 
          1.1 xmax]}, {-2 Max[.007*xmax*bs*1.5, .01*ymax*bs*1.5], 
         1.5 ymax}}, 
      AxesLabel -> {Style["x(t)", Italic, Bold, "Label"], 
        Style["y(t)", Italic, Bold, "Label"]}, ImagePadding -> 30, 
      PlotStyle -> If[traj, Blue, Lighter[Blue, .9]]], 
     Graphics[{Black, 
       Disk[(({x[Min[tf, end]], y[Min[tf, end]]} /. soln)), {Max[.007*
           xmax*bs, .01*ymax*bs], Max[.007*xmax*bs, .01*ymax*bs]}]}], 
     Graphics[{Black, 
       Disk[{0, h}, {Max[.007*xmax*bs*1.5, .01*ymax*bs*1.5], 
         Max[.007*xmax*bs*1.5, .01*ymax*bs*1.5]}]}], 
     Graphics[{Black, 
       Rotate[
        Rectangle[{0, h - 1.5 Max[.007*xmax*bs, .01*ymax*bs]}, 
         Max[.007*xmax*bs, .01*ymax*bs] {5, 1.5} + {0, 
           h}], \[Theta] Degree, {0, h}]}], 
     Graphics[{Darker[Brown], 
       Rotate[Rectangle[
         Max[.007*xmax*bs, .01*ymax*bs] {-2, -1.5} + {0, h}, 
         Max[.007*xmax*bs, .01*ymax*bs] {2, .5} + {0, 
           h}], \[Theta] Degree, {0, h}]}], 
     Graphics[
      Table[{Darker[Brown], 
        Rotate[Rectangle[
          Max[.007*xmax*bs, .01*ymax*bs] {-.1, 2.5} + {0, h}, 
          Max[.007*xmax*bs, .01*ymax*bs] {.1, -2.5} + {0, 
            h}], \[Pi] k/4 + .1]}, {k, 0, 3}]], 
     Graphics[{Darker[Brown], 
       Circle[{0, h}, 2.5 Max[.007*xmax*bs, .01*ymax*bs]]}], 
     Graphics[{Brown, 
       Rectangle[Max[.007*xmax*bs, .01*ymax*bs] {-3, -2.5}, 
        Max[.007*xmax*bs, .01*ymax*bs] {2, -2.5} + {0, h}]}]  }], 
   Style[Grid[{{"x: ", Pane[If[s[[1]] < .1, 0, s[[1]]], 53], "m", 
       Spacer[30], "y: ", Pane[If[s[[2]] < .1, 0, s[[2]]], 53], "m", 
       Spacer[30], "Travel Time: ", tf, " s"}, {"Height Reached: ", 
       ymax, " m", Spacer[30], "Distance Travelled: ", xmax, " m", 
       Spacer[30], "Time: ", Pane[Min[end, tf], 53], " s"}}], 
    "Label"]]], {{v, 40, "Initial Velocity"}, 1, 100, 
  Appearance -> "Labeled"}, {{\[Theta], 45., "Initial Angle"}, 10., 
  90., Appearance -> "Labeled"}, {{h, 0, "Initial Height"}, 0, 20, 
  Appearance -> "Labeled"}, {{m, 10, "Mass"}, .001, 50, 
  Appearance -> "Labeled"}, {{g, 9.8, "Gravity"}, 3, 20, 
  Appearance -> "Labeled"}, {{\[Kappa], 0, "Drag Coefficient"}, 0, 1, 
  Appearance -> "Labeled"}, {{bs, 2, "Ball Radius"}, .05, 3, .01, 
  Appearance -> "Labeled"}, {{end, .001, "Time"}, .001, 
  Dynamic[tf], .001, 
  Appearance -> "Labeled"}, {{traj, False, "Trajectory"}, {True, 
   False}}, {{end, .001, "Shoot"}, .001, Dynamic[tf], .001, 
  ControlType -> Trigger, AnimationRate -> 1}, Spacer[380],
 SynchronousUpdating -> True, AutorunSequencing -> {7}, 
 SaveDefinitions -> True, Initialization :> {tf = Infinity}, 
 TrackedSymbols :> {\[Theta], h, g, \[Kappa], end}]
